{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/App.jsx","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"wUAGaA,G,YAAO,SAAAC,GACpB,OACI,yBAAKC,UAAU,kBACf,yBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,wBAAIJ,UAAU,WAAWD,EAAMI,QAAQE,MACvC,uBAAGL,UAAU,QAAQD,EAAMI,QAAQG,UCPxBC,EAAU,SAAAR,GACnB,OACS,yBAAKC,UAAU,aAERD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,SCN3CQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,2BACAb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAWF,MCiCAG,G,wDApCb,aAAe,IAAD,8BACZ,gBAaHH,aAAe,SAAAI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAKrC,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC3B,GAAD,OACvCA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,yBAAK/B,UAAU,OACf,+CACE,kBAAC,EAAD,CACEY,YAAY,kBACZC,aAAce,KAAKf,eAErB,kBAAC,EAAD,CAAUL,SAAUqB,S,GA/BVI,cCAlBC,IAASC,OAAO,kBAAC,EAAD,MACZC,SAASC,eAAe,W","file":"static/js/main.74632f97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\"\r\n\r\nexport const Card = props => {\r\nreturn (\r\n    <div className=\"card-container\"> \r\n    <img \r\n    alt='monster' \r\n    src={`https://robohash.org/${props.monster.id}?set=set2&size=160x160`}\r\n     />\r\n  <h3 className=\"heading\">{props.monster.name}</h3>\r\n  <p className=\"info\">{props.monster.email}</p>\r\n    </div>\r\n);\r\n};","import React from \"react\";\r\nimport './card-list.styles.css';\r\nimport {Card} from \"../card/card.component\"\r\n\r\nexport const CardList= props => {\r\n    return (   \r\n             <div className=\"card-list\">\r\n                 {\r\n                    props.monsters.map(monster => (\r\n                        <Card key={monster.id} monster={monster}/>\r\n                    ))\r\n                }\r\n             </div>\r\n    );\r\n    \r\n};","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input\r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange= {handleChange} />\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { CardList } from \"./card-list/card-list.component\";\r\nimport { SearchBox } from \"./search-box/search-box.component\";\r\nimport \"./App.css\"\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => res.json())\r\n      .then((users) => this.setState({ monsters: users }));\r\n  }\r\n handleChange = e => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n      <h1>Monster Rolodex</h1>\r\n        <SearchBox\r\n          placeholder=\"search monsters\"\r\n          handleChange={this.handleChange}\r\n        />\r\n        <CardList monsters={filteredMonsters} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />,\n    document.getElementById(\"root\"));\n\n\n\n"],"sourceRoot":""}